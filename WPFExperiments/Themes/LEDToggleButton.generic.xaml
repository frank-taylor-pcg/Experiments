<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:WPFExperiments.CustomControls"
	xmlns:converters="clr-namespace:WPFExperiments.Converters">

	<converters:PercentConverter x:Key="PercentConverter" />

	<!-- The colors used to paint the LEDs in their various states -->
	<SolidColorBrush x:Key="LEDOnColor" Color="Green" />
	<SolidColorBrush x:Key="LEDOffColor" Color="DarkRed" />
	<SolidColorBrush x:Key="LEDNullColor" Color="#333" />

	<!-- Used to highlight the LEDs -->
	<Style x:Key="HighlightFill" TargetType="Ellipse">
		<Setter Property="Fill">
			<Setter.Value>
				<RadialGradientBrush>
					<RadialGradientBrush.GradientOrigin>
						<Point X="0.3" Y="0.3" />
					</RadialGradientBrush.GradientOrigin>

					<GradientStop Color="White" Offset="0" />
					<GradientStop Color="#00ffffff" Offset="0.25" />
					<GradientStop Color="#00444444" Offset="0.75" />
					<GradientStop Color="#ff444444" Offset="1" />
				</RadialGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type controls:LEDToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<!-- LED Buttons will always be 3 state.  We indicate the NULL state when we don't know the state. -->
		<Setter Property="IsThreeState" Value="True" />

		<!-- Define a default value for height or the LED won't be drawn -->
		<Setter Property="Height" Value="24" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:LEDToggleButton}">
					<Border
						x:Name="wrappingBorder"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Width="{TemplateBinding Width}"
						Height="{TemplateBinding Height}">

						<Border.ToolTip>
							<TextBlock>
								<Run Text="{TemplateBinding Content}" />
								<Run> Node: </Run>
								<Run Text="{Binding Path=NodeId, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
								<Run> Bit Offset: </Run>
								<Run Text="{Binding Path=BitOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
							</TextBlock>
						</Border.ToolTip>

						<Grid
							x:Name="outerGrid"
							Width="{TemplateBinding Width, Converter={StaticResource PercentConverter}, ConverterParameter=0.98}"
							Height="{TemplateBinding Height, Converter={StaticResource PercentConverter}, ConverterParameter=0.95}">

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Border
								x:Name="innerBorder"
								Grid.Column="0"
								Margin="2,0"
								Width="{Binding ElementName=outerGrid, Path=Height, Converter={StaticResource PercentConverter}, ConverterParameter=0.6}"
								Height="{Binding ElementName=outerGrid, Path=Height, Converter={StaticResource PercentConverter}, ConverterParameter=0.9}"
								CornerRadius="{Binding ElementName=outerGrid, Path=Height, Converter={StaticResource PercentConverter}, ConverterParameter=0.3}"
								BorderBrush="{TemplateBinding BorderBrush}">

								<Border.Background>
									<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
										<GradientStop Color="Black" Offset="0" />
										<GradientStop Color="White" Offset="1" />
									</LinearGradientBrush>
								</Border.Background>

								<Border
									x:Name="sliderBorder"
									Padding="{Binding ElementName=innerBorder, Path=Height, Converter={StaticResource PercentConverter}, ConverterParameter=0.05}"
									Width="{Binding ElementName=innerBorder, Path=Width}"
									Height="{Binding ElementName=innerBorder, Path=Width}"
									VerticalAlignment="Center">

									<Grid>
										<!-- LED Color -->
										<Ellipse x:Name="colorEllipse" />

										<!-- LED Highlight-->
										<Ellipse Style="{StaticResource HighlightFill}" />
									</Grid>
								</Border>
							</Border>

							<Label
								Grid.Column="1"
								Content="{TemplateBinding Content}"
								VerticalAlignment="Center"
								Foreground="{TemplateBinding Foreground}"
								Margin="2,0,0,0"
								Padding="2" />
						</Grid>
					</Border>

					<!-- Modify the color as well as the position of the LED within its slider based on the value of the ToggleButton.IsChecked property -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="False">
							<Setter TargetName="sliderBorder" Property="VerticalAlignment" Value="Bottom" />
							<Setter TargetName="colorEllipse" Property="Fill" Value="{StaticResource LEDOnColor}" />
						</Trigger>

						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="sliderBorder" Property="VerticalAlignment" Value="Center" />
							<Setter TargetName="colorEllipse" Property="Fill" Value="{StaticResource LEDNullColor}" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="sliderBorder" Property="VerticalAlignment" Value="Top" />
							<Setter TargetName="colorEllipse" Property="Fill" Value="{StaticResource LEDOffColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>